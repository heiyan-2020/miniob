cmake_minimum_required(VERSION 3.10)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

project(miniob LANGUAGES C CXX)

MESSAGE(STATUS "PROJECT_SOURCE_DIR - ${PROJECT_SOURCE_DIR}")
MESSAGE(STATUS "PROJECT_BINARY_DIR - ${PROJECT_BINARY_DIR}")

IF (WIN32)
    MESSAGE(STATUS "This is WIN32")
    ADD_DEFINITIONS(-DWIN32)
ELSEIF (WIN64)
    MESSAGE(STATUS "This is WIN64")
    ADD_DEFINITIONS(-DWIN64)
ELSEIF (APPLE)
    MESSAGE(STATUS "This is APPLE")
    # normally __MACH__ has already been defined
    ADD_DEFINITIONS(-D__MACH__)
ELSEIF (UNIX)
    MESSAGE(STATUS "This is UNIX")
    ADD_DEFINITIONS(-DUNIX -DLINUX)
ELSE ()
    MESSAGE(STATUS "This is UNKNOWN OS")
ENDIF (WIN32)

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Debug)
endif()

# generate compile_commands.json
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

#add_compile_options(-fsanitize=address -Wall)
#add_link_options(-fsanitize=address)

MESSAGE("CMAKE_CXX_FLAGS - ${CMAKE_CXX_FLAGS}")
MESSAGE("CMAKE_INSTALL_PREFIX - ${CMAKE_INSTALL_PREFIX}")

ADD_SUBDIRECTORY(deps)
ADD_SUBDIRECTORY(src)

INSTALL(DIRECTORY etc DESTINATION . FILE_PERMISSIONS OWNER_WRITE OWNER_READ GROUP_READ WORLD_READ)